DROP TABLE IF EXISTS CONTACT;
DROP TABLE IF EXISTS ROLE;
DROP TABLE IF EXISTS CONTACT_GROUP;
DROP TABLE IF EXISTS UNIT;
DROP TABLE IF EXISTS TASK;
DROP TABLE IF EXISTS TAG;
DROP TABLE IF EXISTS UNIT_TASK;
DROP TABLE IF EXISTS TASK_TAG;
DROP TABLE IF EXISTS ASSIGNMENT;

CREATE TABLE ROLE (
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(20) NOT NULL
     , PRIVILEGE VARCHAR(100) NOT NULL
     , UNIQUE UQ_TITLE_1 (TITLE)
     , PRIMARY KEY (ID)
);

CREATE TABLE CONTACT_GROUP (
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(20) NOT NULL
     , UNIQUE UQ_TITLE_2 (TITLE)
     , PRIMARY KEY (ID)
);

CREATE TABLE CONTACT (
       ID INT NOT NULL AUTO_INCREMENT
     , ROLE_ID INT NOT NULL
     , GROUP_ID INT NOT NULL
     , FIRST_NAME VARCHAR(60) NOT NULL
     , LAST_NAME VARCHAR(60) NOT NULL
     , PASSWORD VARCHAR(20) NOT NULL
     , EMAIL VARCHAR(60) NOT NULL
     , UNIQUE UQ_CONTACT_1 (EMAIL)
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_CONTACT_ROLE_1 FOREIGN KEY (ROLE_ID)
                  REFERENCES ROLE (ID)
     , CONSTRAINT FK_CONTACT_GROUP_1 FOREIGN KEY (GROUP_ID)
                  REFERENCES CONTACT_GROUP (ID)
);

CREATE TABLE UNIT (
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(60) NOT NULL
     , DESCRIPTION VARCHAR(1000) NOT NULL
     , PRIMARY KEY (ID)
);

CREATE TABLE TASK (
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(100) NOT NULL
     , PRIMARY KEY (ID)
);

CREATE TABLE TAG (
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(100) NOT NULL
     , UNIQUE UQ_TAG_TITLE (TITLE)
     , PRIMARY KEY (ID)
);

CREATE TABLE UNIT_TASK (
       UNIT_ID INT NOT NULL
     , TASK_ID INT NOT NULL
     , PRIMARY KEY (UNIT_ID, TASK_ID)
     , CONSTRAINT FK_UNIT_1 FOREIGN KEY (UNIT_ID)
                  REFERENCES UNIT (ID)
     , CONSTRAINT FK_TASK_1 FOREIGN KEY (TASK_ID)
                  REFERENCES TASK (ID)
);

CREATE TABLE TASK_TAG (
       TASK_ID INT NOT NULL
     , TAG_ID INT NOT NULL
     , PRIMARY KEY (TASK_ID, TAG_ID)
     , CONSTRAINT FK_TASK_2 FOREIGN KEY (TASK_ID)
                  REFERENCES TASK (ID)
     , CONSTRAINT FK_TAG_1 FOREIGN KEY (TAG_ID)
                  REFERENCES TAG (ID)
);

CREATE TABLE ASSIGNMENT (
       CONTACT_ID INT NOT NULL
     , TASK_ID INT NOT NULL
     , PRIMARY KEY (TASK_ID, CONTACT_ID)
     , CONSTRAINT FK_TASK_3 FOREIGN KEY (TASK_ID)
                  REFERENCES TASK (ID)
     , CONSTRAINT FK_CONTACT_1 FOREIGN KEY (CONTACT_ID)
                  REFERENCES CONTACT (ID)
);